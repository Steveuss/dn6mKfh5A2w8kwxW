--Created by Stefanuk12

local localPlayer = game:GetService("Players").LocalPlayer
local currentCamera = game:GetService("Workspace").CurrentCamera
local mouse = localPlayer:GetMouse()

function getClosestPlayerToCursor() [nonamecall]
   local closestPlayer = nil
   local shortestDistance = math.huge
   
    for i, v in pairs(game:GetService("Players"):GetPlayers()) do
        if v ~= localPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Head") and v.Team ~= localPlayer.Team then
            local pos = currentCamera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude

            if magnitude < shortestDistance then
                closestPlayer = v
                shortestDistance = magnitude
            end
        end
    end
   
   return closestPlayer or localPlayer
end

local mt = getrawmetatable(game)
local oldNamecall = mt.__namecall
if setreadonly then setreadonly(mt, false) else make_writeable(mt, true) end
local namecallMethod = getnamecallmethod or get_namecall_method
local newClose = newcclosure or function(f) return f end

mt.__namecall = newClose(function(...) [nonamecall]
   local method = namecallMethod()
   local args = {...}

    if tostring(method) == "FireServer" and tostring(args[1]) == "Attempt_Fire" then
        args[3] = getClosestPlayerToCursor().Character.Head
        args[4] = getClosestPlayerToCursor().Character.Humanoid
        args[5] = getClosestPlayerToCursor().Character.HumanoidRootPart
        args[6] = getClosestPlayerToCursor().Character.Head.CFrame.p
        return oldNamecall(unpack(args))
    end

    return oldNamecall(...)
end)

local backupindex = mt.__index
mt.__index = newcclosure(function(t, k)
    if t == mouse and k == "Hit" then
        return getClosestPlayerToCursor().Character.HumanoidRootPart.CFrame
    elseif t == mouse and k == "Target" then
        return getClosestPlayerToCursor().Character.HumanoidRootPart
    end
    return backupindex(t, k)
end)

if setreadonly then setreadonly(mt, true) else make_writeable(mt, false) end
